/*THIS CSS WILL ONLY WORK FOR TOUCH DEVICES*/

@import url(settings.css);

body {
    margin: 0px;

    font-family: 'Roboto', sans-serif;

    zoom: 1.5;

    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    box-sizing: border-box;
    overflow-x: hidden;

    display: block;
}

::selection {
    background-color: var(--selectionColor);
    color: var(--selectionTextColor);
}

body {
    background-color: var(--backgroundColor);
}

#title {
    box-shadow: 0px 2px 2px 2px rgba(0, 0, 0, 0.25);

    height: 32px;
    left: 10px;
    right: 0px;
    top: 10px;

    position: fixed;

    flex-direction: row;
    align-items: flex-start;
    padding: 4px 4px 4px 24px;
    gap: 4px;

    border-radius: 4px 0px 0px 4px;

    background-color: var(--color1);
    box-sizing: border-box;

    display: flex;
}

.symbol {
    width: 24px;
    height: 24px;
    min-width: 24px;

    background-color: var(--color2);
    fill: var(--uicolor2);
    border-radius: 4px;
    box-sizing: border-box;

    display: flex;
}

.symbol.invert {
    width: 24px;
    height: 24px;
    min-width: 24px;

    background-color: var(--color1);
    fill: var(--uicolor1);

    border-radius: 4px;
}

/* end */

.box {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2px;
    gap: 10px;

    width: auto;
    height: 16px;
    left: 0px;
    top: 0px;

    background: var(--color2);
    color: var(--uicolor2);
    border-radius: 4px;

    box-sizing: border-box;

    transition: outline 0.1s;
    outline: solid #ead31d;
    outline-width: 0px;
}

.box.focus {
    outline-width: 2px;
}

.box.invert {
    background: var(--color1);
    color: var(--uicolor1);
    border-radius: 4px;

    box-sizing: border-box;
}

.transparent-box {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2px;
    gap: 10px;

    width: auto;
    height: 16px;
    left: 0px;
    top: 0px;

    color: var(--uicolor1);
    border-radius: 4px;

    box-sizing: border-box;
}

.transparent-box.invert {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2px;
    gap: 10px;

    width: auto;
    height: 16px;
    left: 0px;
    top: 0px;
    color: var(--uicolor2);
    border-radius: 4px;

    box-sizing: border-box;
}

.text-box {
    height: 12px;

    font-family: 'Roboto';
    font-style: normal;
    font-weight: 400;
    font-size: 10px;
    line-height: 12px;
    /* identical to box height */

    display: flex;
    align-items: center;
    min-width: 16px;

    /* Text Color 1 */

    color: var(--uicolor2);


    /* Inside auto layout */

    flex: none;
    order: 0;
    flex-grow: 0;
}

.editable-box {
    height: 12px;

    font-family: 'Roboto';
    font-style: normal;
    font-weight: 400;
    font-size: 10px;
    line-height: 12px;
    /* identical to box height */

    display: flex;
    align-items: center;
    text-align: center;

    /* Text Color 1 */

    /* Inside auto layout */

    flex: none;
    order: 0;
    flex-grow: 0;
}

.editable-box:focus {
    outline: none !important;
}

object:hover {
    fill: white
}

.buttonsorsomething {
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    gap: 4px;

    left: 0px;
    right: 0px;
    height: 16px;

    display: flex;
    flex: 0px;
}

.button {
    box-sizing: border-box;

    width: auto;
    height: 24px;

    background: var(--color2);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    border-width: 0px;

    font-family: 'Consolas', sans-serif;
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    align-items: center;
    text-align: center;

    color: var(--uicolor2);

    padding-left: 6px;
    padding-right: 6px;
}

.button-boolean {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;

    width: 16px;
    height: 16px;

    background: var(--color2);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    border-width: 0px;

    font-family: 'Consolas', sans-serif;
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    align-items: center;
    text-align: center;

    color: var(--uicolor2);

    fill: none;
}

.button-boolean.invert {
    background: var(--color1);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;
}

.button-boolean.toggle {
    fill: var(--uicolor1);
}

.button-boolean.invert.toggle {
    fill: var(--uicolor2);
}

.button-icon {
    width: 24px;
    height: 24px;
    display: none;
    fill: var(--uicolor2);
}

.button-icon.invert {
    fill: var(--uicolor1);
}

.button-icon.toggle {
    display: block;
}

.tick {
    fill: var(--uicolor2);
}

.tick.invert {
    fill: var(--uicolor1);
}

.button:hover {
    background: linear-gradient(0deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15)), var(--color2);
}

.button:hover:active {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)), var(--color2);
}

.button-boolean:hover:active {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)), var(--color1);
}

.button-boolean:hover {
    background: linear-gradient(0deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15)), var(--color1);
}

.button-boolean.invert:hover:active {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)), var(--color2);
}

.button-boolean.invert:hover {
    background: linear-gradient(0deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15)), var(--color2);
}

.thingy {
    height: 16px;

    /* Inside auto layout */

    flex: none;
    order: 2;
    align-self: stretch;
    flex-grow: 1;
}

.rootObject {
    box-shadow: 0px 2px 2px 2px rgba(0, 0, 0, 0.25);

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;

    width: 100%;

    background: var(--color1);
    border-radius: 4px 0px 0px 4px;
    flex: 0px;

    box-sizing: border-box;
}

.hidenbuton {
    width: 16px;
    height: 24px;

    border: none;
    background: none;

    padding: 0px;
}

.rootObject.hide {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;

    width: 100%;

    background: var(--color1);
    border-radius: 4px 0px 0px 4px;
    flex: 0px;

    min-height: 24px;
    overflow: hidden;

    box-sizing: border-box;
}

.everything {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 44px 0px 10px 10px;
    gap: 10px;
}

.promptwindow {
    background: rgba(0, 0, 0, 0.25);
    backdrop-filter: blur(6px);
    position: fixed;

    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;

    display: flex;
    align-items: center;
    justify-content: center;
}

.titlename {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding: 0px 4px;
    gap: 10px;

    /*    height: 16px;*/

    background: var(--color2);
    border-radius: 4px;

    /* Inside auto layout */

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;

    font-family: 'Consolas', sans-serif;
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    align-items: center;
    text-align: center;

    color: var(--uicolor2);
}

.button-close {
    box-sizing: border-box;

    width: 16px;
    height: 16px;

    background: var(--color2);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    border-width: 0px;

    font-family: 'Consolas', sans-serif;
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    align-items: center;
    text-align: center;

    color: var(--uicolor2);

    padding-left: 4px;
    padding-right: 4px;
}

.button-close::before {
    content: "Ã—"
}

.button-close:hover:active {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)), var(--color2);
}

.button-close:hover {
    background: linear-gradient(0deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15)), var(--color2);
}

.tittle {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 4px 4px 4px;
    gap: 4px;

    /* height: 28px;*/

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;
}

.promptwindow.hidden {
    visibility: hidden;
}

.buttoncontainer {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    padding: 0px;
    gap: 10px;

    height: 16px;


    /* Inside auto layout */

    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 1;
}

.content {
    width: auto;
    height: auto;

    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 0px 4px 4px;
    gap: 10px;

    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 1;
}

.rectangular {
    left: 0px;
    right: 0px;

    padding: 5px;

    display: flex;

    align-items: center;
    flex-direction: column;

    gap: 4px;

    background-color: var(--color2);
    border-radius: 4px;
    box-sizing: border-box;

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 1;
}

.listt {
    display: flex;
    align-items: center;
    flex-direction: row;

    height: 100px;

    left: 0px;
    right: 0px;

    background-color: var(--color1);

    border-radius: 4px;
    gap: 4px;

    box-sizing: border-box;

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 1;
}

.importwindow {
    box-shadow: 0px 2px 2px 2px rgba(0, 0, 0, 0.25);
    /*width: 100%;*/
    /*height: 100px;*/

    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0px;

    position: absolute;

    left: 20px;
    right: 20px;

    background-color: var(--color1);
    border-radius: 4px;
}

.importwindow.hidden {
    visibility: hidden;
}

.titlethingyidkwhattocall {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 4px;
    gap: 4px;

    height: 32px;

    box-sizing: border-box;
}

.variablethingyidkwhattocall {
    clip: auto;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 4px 0px 4px 24px;
    gap: 4px;

    height: 32px;

    width: 100%;

    box-sizing: border-box;
}

.toggler {
    fill: var(--uicolor1);
    width: 16px;
    height: 24px;
    border-radius: 4px;
}

.toggler.invert {
    fill: var(--uicolor2);
    width: 16px;
    height: 24px;
}

.toggler.active {
    transform: rotate(-90deg);
}

.toggler:hover {
    background: rgba(255, 255, 255, 0.15);
}

.toggler:hover:active {
    background: rgba(0, 0, 0, 0.15);
}

.branch {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px 0px 2px 24px;
    gap: 10px;

    /* Inside auto layout */

    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 0;
    box-sizing: border-box;
}

.branchObject {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;

    width: 100%;

    background: var(--color2);
    border-radius: 4px 0px 0px 4px;

    /* Inside auto layout */

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;

    box-sizing: border-box;
}

.Object {
    /* Auto layout */
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;

    background: var(--color2);
    border-radius: 4px 0px 0px 4px;

    /* Inside auto layout */

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;
}

.Object.hide {
    /* Auto layout */
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;

    border-radius: 4px 0px 0px 4px;

    /* Inside auto layout */

    height: 24px;
    min-height: 24px;
    overflow: hidden;

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;
}

.Object.hide .branch {
    display: none;
}

.rootObject.hide .branch {
    display: none;
}

contextmenu {
    box-sizing: border-box;
    padding: 4px;
    display: flex;
    background-color: var(--color1);
    opacity: 0.5;
}

menulist {}

menuseperator {}

.Object.invert {
    /* Auto layout */

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;

    background: var(--color1);
    border-radius: 4px 0px 0px 4px;

    /* Inside auto layout */

    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;
}

.valueNumber {
    clip: rect(1, 1, 1, 1);
    background: var(--color2);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    color: var(--uicolor2);

    box-sizing: border-box;
    position: inherit;

    padding-left: 4px;
    padding-right: 4px;
    right: 0px;

    height: 16px;
    width: auto;
    min-width: 16px;
    max-width: 100px;

    font-family: 'Consolas';
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    /* identical to box height */

    display: flex;
    flex: none;
    order: 0;
    flex-grow: 0;
    align-items: center;
    text-align: center;

    transition: outline 0.1s;
    outline: solid #ead31d;
    outline-width: 0px;
}

.valueNumber:focus {
    outline-width: 2px;
}

.valueNumber.invert {
    clip: rect(1, 1, 1, 1);
    background: var(--color1);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    color: var(--uicolor1);

    box-sizing: border-box;
    position: inherit;

    padding-left: 4px;
    padding-right: 4px;
    right: 0px;

    height: 16px;
    width: auto;
    min-width: 16px;

    font-family: 'Consolas';
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    /* identical to box height */

    display: flex;
    flex: none;
    order: 0;
    flex-grow: 0;
    align-items: center;
    text-align: center;
}

.valueString {
    clip: rect(1, 1, 1, 1);
    background: var(--color2);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    color: var(--uicolor2);

    box-sizing: border-box;
    position: inherit;

    padding-left: 4px;
    padding-right: 4px;
    right: 0px;

    height: 16px;
    width: auto;
    min-width: 16px;

    font-family: 'Consolas';
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    /* identical to box height */

    display: flex;
    flex: none;
    order: 0;
    flex-grow: 0;
    align-items: center;
    text-align: center;

    transition: outline 0.1s;
    outline: solid #ead31d;
    outline-width: 0px;
}

.valueString:focus {
    outline-width: 2px;
}

.valueString.invert {
    clip: rect(1, 1, 1, 1);
    background: var(--color1);
    box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.5);
    border-radius: 4px;

    color: var(--uicolor1);

    box-sizing: border-box;
    position: inherit;

    padding-left: 4px;
    padding-right: 4px;
    right: 0px;

    height: 16px;
    width: auto;
    min-width: 16px;

    font-family: 'Consolas';
    font-style: normal;
    font-weight: 400;
    font-size: 12px;
    line-height: 14px;
    /* identical to box height */

    display: flex;
    flex: none;
    order: 0;
    flex-grow: 0;
    align-items: center;
    text-align: center;
}

.valueString::before {
    content: '"'
}

.valueString::after {
    content: '"'
}